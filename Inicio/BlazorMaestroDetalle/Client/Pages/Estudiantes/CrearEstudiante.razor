@page "/estudiantes/crear"
@inject HttpClient http
@inject NavigationManager navigationManager

<h3>Crear Estudiante</h3>

<EditForm Model="estudiante" OnValidSubmit="OnValidSubmit">

    <div class="form-group">
        <label for="nombre">Nombre</label>
        <div>
            <InputText class="form-control" id="nombre" @bind-Value="@estudiante.Nombre" />
        </div>
    </div>

    <div class="form-group">
        <div class="form-group">
            <button type="button" class="btn btn-secondary"
                    @onclick="@(() => estudiante.Direcciones.Add(new Direccion()))">
                Agregar Dirección
            </button>
        </div>

        @for (var i = 0; i < estudiante.Direcciones.Count; i++)
        {
            var indice = i;
            var direccion = estudiante.Direcciones[i];

            <h5>Dirección @(i+1)</h5>

            <div class="form-group">
                <label>Calle:</label>
                <InputText class="form-control" @bind-Value="direccion.Calle" />
            </div>

            <div class="form-group">
                <label>Ciudad:</label>
                <InputText class="form-control" @bind-Value="direccion.Ciudad" />
            </div>

            <button type="button" class="btn btn-danger"
                    @onclick="@(() => estudiante.Direcciones.RemoveAt(indice))"
                    >Remover</button>
        }
    </div>

    <button class="btn btn-primary" type="submit">Enviar</button>
    <button type="button" class="btn btn-secondary" @onclick="Cancelar">Cancelar</button>

</EditForm>

@code {
    Estudiante estudiante = new Estudiante();

    private async Task OnValidSubmit()
    {
        Console.WriteLine("exitoso");
        var respuesta = await http.PostAsJsonAsync("api/estudiantes", estudiante);

        var cuerpoRespuesta = await respuesta.Content.ReadAsStringAsync();

        if (respuesta.IsSuccessStatusCode)
        {
            navigationManager.NavigateTo("estudiantes");
        }
        else
        {
            Console.WriteLine(cuerpoRespuesta);
            Console.WriteLine((int)respuesta.StatusCode);
        }
    }

    private void Cancelar()
    {
        estudiante = new Estudiante();
    }
}
